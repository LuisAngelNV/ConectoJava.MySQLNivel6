/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MySQL;
// Librerias Agreadas

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
// Final de librerias

public class Java extends javax.swing.JFrame {

    //Implementacion de elemento para mandar a llamar tablas
    DefaultTableModel modelo = new DefaultTableModel();
    Statement ejecutor = null;

    // Elementos generados para conexión
    Connection con;
    String driver = "com.mysql.cj.jdbc.Driver";
    String user = "root";
    String pass = "201721559";
    String url = "jdbc:mysql://localhost:3306/empresa_basica?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";

    //Metodo cargar tablas
    protected void cargarTabla() {
        //Elementos de la tabla a llamar
        modelo.setRowCount(0);
        //Declaración de arreglo (Dependiendo de los elementos que se tenga se declara)
        String datos[] = new String[6];
        //Consulta 
        String query = "SELECT * FROM empleados";
        DebugQuery.setText(query);
        ResultSet rs;

        try {
            ejecutor = con.createStatement();
            //Dar tiempo de espera a que responda el servidor
            ejecutor.setQueryTimeout(20);

            rs = ejecutor.executeQuery(query);
            while (rs.next() == true) {
                datos[0] = rs.getString("id_Usuario");
                datos[1] = rs.getString("Nombre");
                datos[2] = rs.getString("ApellidoP");
                datos[3] = rs.getString("Edad");
                datos[4] = rs.getString("AreaLaboral");
                datos[5] = rs.getString("Puesto");

                modelo.addRow(datos);
            }
            tablaDatos.setModel(modelo);
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    protected void buscarTabla(String Nombre, String Edad, String AreaLaboral) {
        modelo.setRowCount(0);
        //Declaración de arreglo (Dependiendo de los elementos que se tenga se declara)
        String datos[] = new String[6];
        //Implementación de consulta where
        String where = " where 1=1 ";
        //Si la descripcion no esta vacia
        if (Nombre.isEmpty() == false) {
            where = where + " and Nombre='" + Nombre + "' ";
        }
        //Si el tipo curso no esta vacia

        if (Edad.isEmpty() == false) {
            where = where + " and Edad='" + Edad + "' ";
        }
        //Si el Autor no esta vacio
        if (AreaLaboral.isEmpty() == false) {
            where = where + " and AreaLaboral='" + AreaLaboral + "' ";
        }
        //Consulta 
        String query = "SELECT * FROM empleados " + where + " ;";
        DebugQuery.setText(query);
        ResultSet rs;

        try {
            ejecutor = con.createStatement();
            //Dar tiempo de espera a que responda el servidor
            ejecutor.setQueryTimeout(20);
            rs = ejecutor.executeQuery(query);
            while (rs.next() == true) {
                datos[0] = rs.getString("id_Usuario");
                datos[1] = rs.getString("Nombre");
                datos[2] = rs.getString("ApellidoP");
                datos[3] = rs.getString("Edad");
                datos[4] = rs.getString("AreaLaboral");
                datos[5] = rs.getString("Puesto");
                modelo.addRow(datos);
            }
            tablaDatos.setModel(modelo);
        } catch (Exception e) {
            System.out.println(e);
        }
    }
// Validar conexión con la DB

    public void conectar() {
        con = null;
        try {
            Class.forName(driver);
            con = (Connection) DriverManager.getConnection(url, user, pass);
            if (con != null) {
                estadoCon.setText("Conexion exitosa");
            }
        } catch (Exception e) {
            estadoCon.setText("Conexion no exitosa " + e);
        }
    }

    public Java() {
        initComponents();
        modelo.addColumn("id_Usuario");
        modelo.addColumn("Nombre");
        modelo.addColumn("ApellidoP");
        modelo.addColumn("Edad");
        modelo.addColumn("AreaLaboral");
        modelo.addColumn("Puesto");
        //Mandar a llamar a nuestro sistema de inicializacion
        conectar();
        // Llamado de funcion generada llenado de tablas
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        estadoCon = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDatos = new javax.swing.JTable();
        porNombre = new javax.swing.JTextField();
        porEdad = new javax.swing.JTextField();
        porAreaLaboral = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        DebugQuery = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellidoP = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        txtAreaLaboral = new javax.swing.JTextField();
        txtPuesto = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        estadoCon.setText("jLabel1");

        tablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_Usuario", "Nombre", "ApellidoP", "Edad", "AreaLaboral", "Puesto"
            }
        ));
        tablaDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaDatos);

        jLabel1.setText("Nombre");

        jLabel2.setText("Edad");

        jLabel3.setText("Área Laboral");

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        DebugQuery.setColumns(20);
        DebugQuery.setRows(5);
        jScrollPane2.setViewportView(DebugQuery);

        jLabel4.setText("Agregar nuevo usuario: ");

        jLabel5.setText("Nombre");

        jLabel6.setText("Apellido Paterno");

        jLabel7.setText("Edad");

        jLabel8.setText("Área laboral");

        jLabel9.setText("Puesto");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Eliminar");
        btnBorrar.setEnabled(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(porNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(porEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(porAreaLaboral, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btBuscar)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(estadoCon))
                        .addGap(0, 798, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(534, 534, 534)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBorrar)
                                .addGap(20, 20, 20)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtApellidoP)
                            .addComponent(txtPuesto, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                            .addComponent(txtAreaLaboral)
                            .addComponent(txtEdad)
                            .addComponent(txtNombre)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(estadoCon)
                .addGap(4, 4, 4)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(porEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(porAreaLaboral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscar)
                    .addComponent(jLabel6)
                    .addComponent(txtApellidoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtAreaLaboral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar)
                            .addComponent(btnEditar)
                            .addComponent(btnBorrar))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        buscarTabla(porNombre.getText(), porEdad.getText(), porAreaLaboral.getText());
    }//GEN-LAST:event_btBuscarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        agregar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void tablaDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDatosMouseClicked
        int registro = tablaDatos.getSelectedRow();
        txtNombre.setText(tablaDatos.getValueAt(registro, 1).toString());
        txtApellidoP.setText(tablaDatos.getValueAt(registro, 2).toString());
        txtEdad.setText(tablaDatos.getValueAt(registro, 3).toString());
        txtAreaLaboral.setText(tablaDatos.getValueAt(registro, 4).toString());
        txtPuesto.setText(tablaDatos.getValueAt(registro, 5).toString());

        //Activar Buttons
        btnBorrar.setEnabled(true);
        btnEditar.setEnabled(true);
    }//GEN-LAST:event_tablaDatosMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        PreparedStatement preparar = null;
        String query = "update empleados set"
                + " Nombre='" + txtNombre.getText() + "',"
                + " ApellidoP='" + txtApellidoP.getText() + "',"
                + " Edad='" + txtEdad.getText() + "',"
                + " AreaLaboral='" + txtAreaLaboral.getText() + "',"
                + " Puesto='" + txtPuesto.getText() + "'"
                + " where id_Usuario = '" + tablaDatos.getValueAt(tablaDatos.getSelectedRow(), 0) + "'; ";

        try {
            preparar = con.prepareStatement(query);
            preparar.executeUpdate();
            cargarTabla();
            //Limpiar botones
            txtNombre.setText("");
            txtApellidoP.setText("");
            txtEdad.setText("");
            txtAreaLaboral.setText("");
            txtPuesto.setText("");
        } catch (Exception e) {
            System.out.println(e);
        }
        //Desabilitar Buttons despues de hacer la accion
        btnBorrar.setEnabled(false);
        btnEditar.setEnabled(false);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed

        PreparedStatement pre = null;
        String query = "DELETE from empleados "
                + "where id_Usuario = '" + tablaDatos.getValueAt(tablaDatos.getSelectedRow(), 0) + "'; ";

        try {
            pre = con.prepareStatement(query);
            pre.executeUpdate();
            cargarTabla();
            //Limpiar botones
            txtNombre.setText("");
            txtApellidoP.setText("");
            txtEdad.setText("");
            txtAreaLaboral.setText("");
            txtPuesto.setText("");
        } catch (Exception e) {
            System.out.println(e);
        }
        //Desabilitar Buttons despues de hacer la accion
        btnBorrar.setEnabled(false);
        btnEditar.setEnabled(false);
    }//GEN-LAST:event_btnBorrarActionPerformed

    protected void agregar() {
        String mensajeError = "";
        String query = "";
        PreparedStatement preparar = null;
        if (txtNombre.getText().isEmpty() == true) {
            mensajeError = mensajeError + "El nombre no puede estar vacio \n";
        }
        if (txtApellidoP.getText().isEmpty() == true) {
            mensajeError = mensajeError + "El Apellido no puede estar vacio \n";
        }
        if (txtEdad.getText().isEmpty() == true) {
            mensajeError = mensajeError + "LA edad no puede estar vacia \n";
        }
        if (txtAreaLaboral.getText().isEmpty() == true) {
            mensajeError = mensajeError + "El Área Laboral no puede estar vacio \n";
        }
        if (txtPuesto.getText().isEmpty() == true) {
            mensajeError = mensajeError + "El Puesto no puede estar vacio \n";
        }

        if (mensajeError.isEmpty() == true) {
            query = "INSERT INTO empleados "
                    + "(Nombre, ApellidoP, Edad, AreaLaboral, Puesto) VALUES "
                    + "('" + txtNombre.getText() + "','" + txtApellidoP.getText() + "','" + txtEdad.getText() + "','" + txtAreaLaboral.getText() + "','" + txtPuesto.getText() + "')";
            try {
                preparar = con.prepareStatement(query);
                preparar.executeUpdate();
                cargarTabla();
                //Limpiar botones
                txtNombre.setText("");
                txtApellidoP.setText("");
                txtEdad.setText("");
                txtAreaLaboral.setText("");
                txtPuesto.setText("");
            } catch (Exception e) {
                System.out.println(e);
            }

        } else {
            JOptionPane.showMessageDialog(null, mensajeError);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Java.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Java.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Java.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Java.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Java().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea DebugQuery;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JLabel estadoCon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField porAreaLaboral;
    private javax.swing.JTextField porEdad;
    private javax.swing.JTextField porNombre;
    private javax.swing.JTable tablaDatos;
    private javax.swing.JTextField txtApellidoP;
    private javax.swing.JTextField txtAreaLaboral;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPuesto;
    // End of variables declaration//GEN-END:variables
}
